# Наш вариант - CTR+CBC-MAC
# 1. Реализовать алгоритм наложения (снятия) подложки на сообщение, а также конвейер обработки отправляемых и
# принимаемых сообщений.
# 2. Предусмотреть интерфейсы для использования тестов. Тесты, которые используются  в приложении, опираются на данные,
# включённые в текстовые файлы.
# 3. Реализовать криптографическую основу протокола. Наш вариант - подход MAC then Encrypt с применением режимов
# CTR и CBC.
# 4. Реализовать программный компонент отвечающий за сессию протокола. Убедиться, что в рамках приёма и передачи
# сообщений не производится значимого объёма необязательных вычислений (отсутствует повторный пересчёт известных значений).
# 5. Провести комплексное тестирование полученного решения. Предусмотреть этап верификации (корректность реализации
# относительно указаний в приложении) и валидации (корректности функционирования с точки зрения практической задачи)
# модели протокола.
# 6. Продемонстрировать устойчивость/уязвимость протокола или его составных частей к различным атакам, в том числе,
# опирающимся на «шифрооракула». Формально-логически проанализировать алгоритм с точки зрения полученной информации,
# сделать соответствующие выводы об использованной реализации криптографического решения.

# После выполнения пункта задания, соответствующие комментарии удалить.

class Lab4Temp:
    def __init(self):
        pass
